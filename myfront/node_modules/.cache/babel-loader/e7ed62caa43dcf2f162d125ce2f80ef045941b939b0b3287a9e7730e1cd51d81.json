{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Documents/INTECH/projet/myfront/src/components/Product/ProductList.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { Buttons } from \"../Buttons/Buttons.js\";\n//import styles from \"./ProductList.css\";\nimport { ProductForm } from \"../../components/Form/ProductForm\";\nimport { deleteProduct, getProduct, updateProduct } from \"../../api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'Id',\n  width: 70\n}, {\n  field: 'name',\n  headerName: 'Name',\n  width: 150\n}, {\n  field: 'type',\n  headerName: 'Type',\n  width: 120\n}, {\n  field: 'price',\n  headerName: 'Price',\n  width: 200\n}, {\n  field: \"rating\",\n  headerName: \"RATING\",\n  width: 130\n}, {\n  field: \"warranty_year\",\n  headerName: \"WARRANTY\",\n  width: 130\n}, {\n  field: \"avalaible\",\n  headerName: \"AVALAIBLE\",\n  width: 130\n}];\nconst ProductList = () => {\n  _s();\n  const [selectedRows, setSelectedRows] = React.useState([]);\n  const dataGridRef = React.useRef(null);\n  const [rows, setRows] = React.useState([]);\n  const [showForm, setShowForm] = React.useState(false);\n  const [editFormData, setEditFormData] = React.useState(null);\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await getProduct();\n        const {\n          data\n        } = response;\n        console.log(data);\n        const dataWithIds = data.map(product => ({\n          ...product,\n          id: product._id,\n          name: product.name,\n          type: product.type\n        }));\n        console.log(dataWithIds);\n        setRows(dataWithIds);\n      } catch (error) {\n        console.error(\"Error de Recuperation\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleDelete = async () => {\n    console.log(selectedRows);\n    const updatedRows = rows.filter(row => !selectedRows.includes(row.id));\n    setRows(updatedRows);\n    for (const selectedRow of selectedRows) {\n      console.selectedRow();\n      await deleteProduct(selectedRow);\n    }\n  };\n  const handleEdit = () => {\n    console.log(selectedRows);\n    setShowForm(true);\n    const selectedRowData = rows.find(row => row.id === selectedRows[0]);\n    setEditFormData(selectedRowData);\n  };\n  const handleFormSubmit = async formData => {\n    console.log(formData);\n    // Call your edit API endpoint here with the formData\n    await updateProduct(formData);\n    setShowForm(false);\n    setEditFormData(null);\n    // Refetch the data or update the edited row in the rows state\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 400,\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        onRowSelectionModelChange: newSelection => setSelectedRows(newSelection),\n        initialState: {\n          pagination: {\n            paginationModel: {\n              page: 0,\n              pageSize: 5\n            }\n          }\n        },\n        pageSizeOptions: [5, 10],\n        checkboxSelection: true,\n        ref: dataGridRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Buttons, {\n          setShowForm: setShowForm,\n          handleDelete: handleDelete,\n          handleEdit: handleEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), showForm && /*#__PURE__*/_jsxDEV(ProductForm, {\n        setShowForm: setShowForm,\n        initialFormData: editFormData,\n        handleSubmit: handleFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(ProductList, \"P5GWsVeH+NSsSyR/I30ueOg77Xc=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","DataGrid","Buttons","ProductForm","deleteProduct","getProduct","updateProduct","jsxDEV","_jsxDEV","Fragment","_Fragment","columns","field","headerName","width","ProductList","_s","selectedRows","setSelectedRows","useState","dataGridRef","useRef","rows","setRows","showForm","setShowForm","editFormData","setEditFormData","useEffect","fetchData","response","data","console","log","dataWithIds","map","product","id","_id","name","type","error","handleDelete","updatedRows","filter","row","includes","selectedRow","handleEdit","selectedRowData","find","handleFormSubmit","formData","children","style","height","onRowSelectionModelChange","newSelection","initialState","pagination","paginationModel","page","pageSize","pageSizeOptions","checkboxSelection","ref","fileName","_jsxFileName","lineNumber","columnNumber","initialFormData","handleSubmit","_c","$RefreshReg$"],"sources":["/home/kevin/Documents/INTECH/projet/myfront/src/components/Product/ProductList.js"],"sourcesContent":["import * as React from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { Buttons } from \"../Buttons/Buttons.js\";\r\n//import styles from \"./ProductList.css\";\r\nimport { ProductForm } from \"../../components/Form/ProductForm\";\r\nimport { deleteProduct, getProduct, updateProduct} from \"../../api/index\";\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'Id', width: 70 },\r\n  { field: 'name', headerName: 'Name', width: 150 },\r\n  { field: 'type', headerName: 'Type', width: 120 },\r\n  { field: 'price', headerName: 'Price', width: 200 },\r\n  { field: \"rating\", headerName: \"RATING\", width: 130 },\r\n  { field: \"warranty_year\", headerName: \"WARRANTY\", width: 130 },\r\n  { field: \"avalaible\", headerName: \"AVALAIBLE\", width: 130 },\r\n];\r\n\r\nconst ProductList = () => {\r\n  const [selectedRows, setSelectedRows] = React.useState([]);\r\n  const dataGridRef = React.useRef(null);\r\n  const [rows, setRows] = React.useState([]);\r\n  const [showForm, setShowForm] = React.useState(false);\r\n  const [editFormData, setEditFormData] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await getProduct();\r\n        const { data } = response;\r\n        console.log(data);\r\n        \r\n        const dataWithIds = data.map((product) => ({\r\n          ...product,\r\n          id: product._id,\r\n          name: product.name,\r\n          type: product.type,\r\n        }));\r\n        console.log(dataWithIds);\r\n        setRows(dataWithIds);\r\n        \r\n      } catch (error) {\r\n        console.error(\"Error de Recuperation\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\nconst handleDelete = async () => {\r\n    console.log(selectedRows);\r\n    const updatedRows = rows.filter((row) => !selectedRows.includes(row.id));\r\n    setRows(updatedRows);\r\n    for (const selectedRow of selectedRows) {\r\n      console.selectedRow();\r\n      await deleteProduct(selectedRow);\r\n    }\r\n};\r\n\r\nconst handleEdit = () => {\r\n    console.log(selectedRows);\r\n    setShowForm(true);\r\n    const selectedRowData = rows.find((row) => row.id === selectedRows[0]);\r\n    setEditFormData(selectedRowData);\r\n  };\r\n\r\n  const handleFormSubmit = async (formData) => {\r\n    console.log(formData);\r\n    // Call your edit API endpoint here with the formData\r\n    await updateProduct(formData);\r\n    setShowForm(false);\r\n    setEditFormData(null);\r\n    // Refetch the data or update the edited row in the rows state\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div style={{ height: 400, width: '100%' }}>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            onRowSelectionModelChange={(newSelection) =>\r\n              setSelectedRows(newSelection)\r\n            }\r\n            initialState={{\r\n              pagination: {\r\n                paginationModel: { page: 0, pageSize: 5 },\r\n              },\r\n            }}\r\n            pageSizeOptions={[5, 10]}\r\n            checkboxSelection\r\n            ref={dataGridRef}\r\n          />\r\n        <div>\r\n          <Buttons\r\n            setShowForm={setShowForm}\r\n            handleDelete={handleDelete}\r\n            handleEdit={handleEdit}\r\n          />\r\n        </div>\r\n        {showForm && (\r\n          <ProductForm\r\n            setShowForm={setShowForm}\r\n            initialFormData={editFormData}\r\n            handleSubmit={handleFormSubmit}\r\n          />\r\n        )}\r\n        </div>\r\n    </>\r\n  );\r\n};\r\nexport default ProductList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}